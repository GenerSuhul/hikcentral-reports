{"ast":null,"code":"import emailjs from '@emailjs/browser';\nconst SERVICE_ID = 'service_kjwa94s';\nconst TEMPLATE_ID = 'template_wdqmcgg';\nconst PUBLIC_KEY = 'x-IkhulHmUhyILb5a';\nemailjs.init(PUBLIC_KEY);\nexport const sendEmail = async templateParams => {\n  try {\n    // Validaci√≥n de par√°metros obligatorios\n    if (!templateParams.to_email || !templateParams.subject || !templateParams.html_content) {\n      console.error('‚ùó templateParams incompleto:', templateParams);\n      return {\n        success: false,\n        error: 'Faltan campos requeridos en templateParams.'\n      };\n    }\n\n    // Limpieza de emails\n    templateParams.to_email = templateParams.to_email.split(',').map(correo => correo.trim()).join(',');\n\n    // Log para ver los par√°metros\n    console.log('üì§ Enviando correo con los siguientes datos:');\n    console.log('üì® to_email:', templateParams.to_email);\n    console.log('üìù subject:', templateParams.subject);\n    console.log('üìÑ html_content length:', templateParams.html_content.length);\n    const response = await emailjs.send(SERVICE_ID, TEMPLATE_ID, templateParams);\n    console.log('‚úÖ Email enviado correctamente:', response.status, response.text);\n    return {\n      success: true,\n      response\n    };\n  } catch (error) {\n    console.error('‚ùå Error al enviar correo:', error);\n    return {\n      success: false,\n      error: typeof error === 'string' ? error : (error === null || error === void 0 ? void 0 : error.text) || (error === null || error === void 0 ? void 0 : error.message) || JSON.stringify(error)\n    };\n  }\n};\nexport const generateHtmlTable = data => {\n  if (!data || data.length === 0) {\n    return '<p>No hay datos para mostrar en la tabla.</p>';\n  }\n  const headers = ['Departamento', 'Grupo de asistencia', 'Nombre', 'Fecha', 'Hora real del registro de entrada', 'Hora real de registro de salida', 'Grabaci√≥n de asistencia', 'Duraci√≥n de la pausa', 'Registros de descansos', 'Periodo de tiempo'];\n  let tableHtml = `\n    <style>\n      table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n        font-family: Arial, sans-serif;\n        font-size: 14px;\n      }\n      th, td {\n        border: 1px solid #dddddd;\n        text-align: left;\n        padding: 8px;\n      }\n      th {\n        background-color: #f2f2f2;\n        font-weight: bold;\n      }\n      tr:nth-child(even) {\n        background-color: #f9f9f9;\n      }\n    </style>\n    <table>\n      <thead>\n        <tr>\n  `;\n  headers.forEach(header => {\n    tableHtml += `<th>${header}</th>`;\n  });\n  tableHtml += `</tr></thead><tbody>`;\n  data.forEach(row => {\n    tableHtml += '<tr>';\n    headers.forEach(header => {\n      tableHtml += `<td>${row[header] || ''}</td>`;\n    });\n    tableHtml += '</tr>';\n  });\n  tableHtml += `</tbody></table>`;\n  return tableHtml;\n};","map":{"version":3,"names":["emailjs","SERVICE_ID","TEMPLATE_ID","PUBLIC_KEY","init","sendEmail","templateParams","to_email","subject","html_content","console","error","success","split","map","correo","trim","join","log","length","response","send","status","text","message","JSON","stringify","generateHtmlTable","data","headers","tableHtml","forEach","header","row"],"sources":["C:/Users/itagr/project/src/utils/emailService.js"],"sourcesContent":["import emailjs from '@emailjs/browser';\n\nconst SERVICE_ID = 'service_kjwa94s';\nconst TEMPLATE_ID = 'template_wdqmcgg';\nconst PUBLIC_KEY = 'x-IkhulHmUhyILb5a';\n\nemailjs.init(PUBLIC_KEY);\n\nexport const sendEmail = async (templateParams) => {\n  try {\n    // Validaci√≥n de par√°metros obligatorios\n    if (\n      !templateParams.to_email ||\n      !templateParams.subject ||\n      !templateParams.html_content\n    ) {\n      console.error('‚ùó templateParams incompleto:', templateParams);\n      return { success: false, error: 'Faltan campos requeridos en templateParams.' };\n    }\n\n    // Limpieza de emails\n    templateParams.to_email = templateParams.to_email\n      .split(',')\n      .map(correo => correo.trim())\n      .join(',');\n\n    // Log para ver los par√°metros\n    console.log('üì§ Enviando correo con los siguientes datos:');\n    console.log('üì® to_email:', templateParams.to_email);\n    console.log('üìù subject:', templateParams.subject);\n    console.log('üìÑ html_content length:', templateParams.html_content.length);\n\n    const response = await emailjs.send(SERVICE_ID, TEMPLATE_ID, templateParams);\n    console.log('‚úÖ Email enviado correctamente:', response.status, response.text);\n    return { success: true, response };\n  } catch (error) {\n    console.error('‚ùå Error al enviar correo:', error);\n    return {\n      success: false,\n      error: typeof error === 'string'\n        ? error\n        : error?.text || error?.message || JSON.stringify(error)\n    };\n  }\n};\n\nexport const generateHtmlTable = (data) => {\n  if (!data || data.length === 0) {\n    return '<p>No hay datos para mostrar en la tabla.</p>';\n  }\n\n  const headers = [\n    'Departamento',\n    'Grupo de asistencia',\n    'Nombre',\n    'Fecha',\n    'Hora real del registro de entrada',\n    'Hora real de registro de salida',\n    'Grabaci√≥n de asistencia',\n    'Duraci√≥n de la pausa',\n    'Registros de descansos',\n    'Periodo de tiempo'\n  ];\n\n  let tableHtml = `\n    <style>\n      table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 20px;\n        font-family: Arial, sans-serif;\n        font-size: 14px;\n      }\n      th, td {\n        border: 1px solid #dddddd;\n        text-align: left;\n        padding: 8px;\n      }\n      th {\n        background-color: #f2f2f2;\n        font-weight: bold;\n      }\n      tr:nth-child(even) {\n        background-color: #f9f9f9;\n      }\n    </style>\n    <table>\n      <thead>\n        <tr>\n  `;\n\n  headers.forEach(header => {\n    tableHtml += `<th>${header}</th>`;\n  });\n\n  tableHtml += `</tr></thead><tbody>`;\n\n  data.forEach(row => {\n    tableHtml += '<tr>';\n    headers.forEach(header => {\n      tableHtml += `<td>${row[header] || ''}</td>`;\n    });\n    tableHtml += '</tr>';\n  });\n\n  tableHtml += `</tbody></table>`;\n\n  return tableHtml;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}