{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst SUPABASE_URL = 'https://fbswmipelgbgkqrxezia.supabase.co';\nconst SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZic3dtaXBlbGdiZ2txcnhlemlhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM3NDQ3MzcsImV4cCI6MjA2OTMyMDczN30.RDJdNhN-jcJ4AKORW54BlQWSiBL5KWATmq0jNonMaL8';\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\nexport const fetchBranches = async () => {\n  const {\n    data,\n    error\n  } = await supabase.from('branches').select('*');\n  if (error) throw error;\n  return data;\n};\nexport const addBranch = async branch => {\n  const {\n    data,\n    error\n  } = await supabase.from('branches').insert(branch).select();\n  if (error) throw error;\n  return data[0];\n};\nexport const updateBranch = async (id, updates) => {\n  const {\n    data,\n    error\n  } = await supabase.from('branches').update(updates).eq('id', id).select();\n  if (error) throw error;\n  return data[0];\n};\nexport const deleteBranch = async id => {\n  const {\n    error\n  } = await supabase.from('branches').delete().eq('id', id);\n  if (error) throw error;\n};\nexport const fetchBranchContacts = async branchId => {\n  const {\n    data,\n    error\n  } = await supabase.from('branch_contacts').select('*').eq('branch_id', branchId);\n  if (error) throw error;\n  return data;\n};\nexport const addBranchContact = async contact => {\n  const {\n    data,\n    error\n  } = await supabase.from('branch_contacts').insert(contact).select();\n  if (error) throw error;\n  return data[0];\n};\nexport const updateBranchContact = async (id, updates) => {\n  const {\n    data,\n    error\n  } = await supabase.from('branch_contacts').update(updates).eq('id', id).select();\n  if (error) throw error;\n  return data[0];\n};\nexport const deleteBranchContact = async id => {\n  const {\n    error\n  } = await supabase.from('branch_contacts').delete().eq('id', id);\n  if (error) throw error;\n};\n\n// utils/supabase.js (al final del archivo)\n\nexport const loginUser = async (email, password) => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('users').select('*').eq('email', email).eq('password', password).maybeSingle(); // No lanza error si no hay coincidencia\n\n    if (error) {\n      console.error('Error Supabase:', error);\n      return {\n        user: null,\n        error: 'Error del servidor. Intenta más tarde.'\n      };\n    }\n    if (!data) {\n      return {\n        user: null,\n        error: 'Correo o contraseña inválidos.'\n      };\n    }\n    return {\n      user: data,\n      error: null\n    };\n  } catch (e) {\n    console.error('Excepción inesperada:', e);\n    return {\n      user: null,\n      error: 'Error inesperado.'\n    };\n  }\n};","map":{"version":3,"names":["createClient","SUPABASE_URL","SUPABASE_ANON_KEY","supabase","fetchBranches","data","error","from","select","addBranch","branch","insert","updateBranch","id","updates","update","eq","deleteBranch","delete","fetchBranchContacts","branchId","addBranchContact","contact","updateBranchContact","deleteBranchContact","loginUser","email","password","maybeSingle","console","user","e"],"sources":["C:/Users/itagr/project/src/utils/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst SUPABASE_URL = 'https://fbswmipelgbgkqrxezia.supabase.co';\nconst SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZic3dtaXBlbGdiZ2txcnhlemlhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM3NDQ3MzcsImV4cCI6MjA2OTMyMDczN30.RDJdNhN-jcJ4AKORW54BlQWSiBL5KWATmq0jNonMaL8';\n\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n\nexport const fetchBranches = async () => {\n  const { data, error } = await supabase\n    .from('branches')\n    .select('*');\n  if (error) throw error;\n  return data;\n};\n\nexport const addBranch = async (branch) => {\n  const { data, error } = await supabase\n    .from('branches')\n    .insert(branch)\n    .select();\n  if (error) throw error;\n  return data[0];\n};\n\nexport const updateBranch = async (id, updates) => {\n  const { data, error } = await supabase\n    .from('branches')\n    .update(updates)\n    .eq('id', id)\n    .select();\n  if (error) throw error;\n  return data[0];\n};\n\nexport const deleteBranch = async (id) => {\n  const { error } = await supabase\n    .from('branches')\n    .delete()\n    .eq('id', id);\n  if (error) throw error;\n};\n\nexport const fetchBranchContacts = async (branchId) => {\n  const { data, error } = await supabase\n    .from('branch_contacts')\n    .select('*')\n    .eq('branch_id', branchId);\n  if (error) throw error;\n  return data;\n};\n\nexport const addBranchContact = async (contact) => {\n  const { data, error } = await supabase\n    .from('branch_contacts')\n    .insert(contact)\n    .select();\n  if (error) throw error;\n  return data[0];\n};\n\nexport const updateBranchContact = async (id, updates) => {\n  const { data, error } = await supabase\n    .from('branch_contacts')\n    .update(updates)\n    .eq('id', id)\n    .select();\n  if (error) throw error;\n  return data[0];\n};\n\nexport const deleteBranchContact = async (id) => {\n  const { error } = await supabase\n    .from('branch_contacts')\n    .delete()\n    .eq('id', id);\n  if (error) throw error;\n};\n\n// utils/supabase.js (al final del archivo)\n\nexport const loginUser = async (email, password) => {\n  try {\n    const { data, error } = await supabase\n      .from('users')\n      .select('*')\n      .eq('email', email)\n      .eq('password', password)\n      .maybeSingle(); // No lanza error si no hay coincidencia\n\n    if (error) {\n      console.error('Error Supabase:', error);\n      return { user: null, error: 'Error del servidor. Intenta más tarde.' };\n    }\n\n    if (!data) {\n      return { user: null, error: 'Correo o contraseña inválidos.' };\n    }\n\n    return { user: data, error: null };\n\n  } catch (e) {\n    console.error('Excepción inesperada:', e);\n    return { user: null, error: 'Error inesperado.' };\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}